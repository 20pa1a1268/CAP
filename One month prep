WEEK1
1)PLUS MINUS

#!/bin/python3

import math
import os
import random
import re
import sys

def plusMinus(arr):
    # Write your code here
    pcount,ncount,count=0,0,0
    for i in range(len(arr)):
        if arr[i]>0:
            pcount=pcount+1
        elif arr[i]<0:
            ncount=ncount+1
        else:
            count=count+1
    print("{:.6f}".format(pcount/len(arr)))
    print("{:.6f}".format(ncount/len(arr)))
    print("{:.6f}".format(count/len(arr)))
if __name__ == '__main__':
    n = int(input().strip())

    arr = list(map(int, input().rstrip().split()))

    plusMinus(arr)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
2)MINI MAX SUM

#!/bin/python3

import math
import os
import random
import re
import sys

def miniMaxSum(arr):
    # Write your code here
    arr.sort()
    sum=0
    sum1=0
    for i in range(4):
        sum=sum+arr[i]
    for i in range(1,5):
        sum1=sum1+arr[i]
    print(sum,sum1)
        

if __name__ == '__main__':

    arr = list(map(int, input().rstrip().split()))

    miniMaxSum(arr)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
3)LONELY INTEGER

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'lonelyinteger' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY a as parameter.
#

def lonelyinteger(a):
    # Write your code here
    a.sort()
    for i in range(len(a)):
        c=a.count(a[i])
        if c==1:
            print(a[i])
        
if __name__ == '__main__':

    n = int(input().strip())

    a = list(map(int, input().rstrip().split()))

    result = lonelyinteger(a)

 -------------------------------------------------------------------------------------------------------------------------------------------------------------------
 4)DIAGONAL DIFFERENCE
 
 #!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'diagonalDifference' function below.
#
# The function is expected to return an INTEGER.
# The function accepts 2D_INTEGER_ARRAY arr as parameter.
#

def diagonalDifference(arr):
    # Write your code here
    sum1=0
    sum2=0
    for i in range(n):
        sum1=sum1+arr[i][i]
    for i in range(n):
        for j in range(n):
            if i+j==n-1:
                sum2=sum2+arr[i][j]
    return abs(sum1-sum2)
        

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = []

    for _ in range(n):
        arr.append(list(map(int, input().rstrip().split())))

    result = diagonalDifference(arr)

    fptr.write(str(result) + '\n')

    fptr.close()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
5)PANGRAMS

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'pangrams' function below.
#
# The function is expected to return a STRING.
# The function accepts STRING s as parameter.
#

def pangrams(s):
    # Write your code here
    a=s.lower()
    b=a.replace(" ","")
    l=[]
    for i in b:
        if i not in l:
            l.append(i)
    if len(l)==26:
            return "pangram"
    else:
        return "not pangram"
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = pangrams(s)

    fptr.write(result + '\n')

    fptr.close()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

6)XOR STRINGS 2

def strings_xor(s, t):
    res = ""
    for i in range(len(s)):
        if s[i] == t[i]:
            res =res+ '0';
        else:
            res = res+'1';

    return res

s = input()
t = input()
print(strings_xor(s, t))
---------------------------------------------------------------------------------------------------------------------------------------------------------------------



